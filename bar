#!/bin/bash
#
# http://github.com/mitchweaver/bin
#
# the unholy lemonbar
#

# on exit, kill all children
trap 'pkill -P $$' EXIT
LC_ALL=""

init() {
    # grab colors from pywal
    . ${HOME}/.cache/wal/colors.sh

    [ -d /tmp/bar ] && rm -rf /tmp/bar
    mkdir -p /tmp/bar

    # wait for dwm to start
    while ! pgrep dwm > /dev/null && [ ! -d /tmp/dwm_info ] ; do
        sleep 0.1
    done

    # if zero, bar is disabled
    [ $(< /tmp/dwm_info/bar_height) -eq 0 ] && exit

    # force a dwm update cycle on bar launch
    echo 1 > /tmp/dwm_info/check

    num_ws=$(< /tmp/dwm_info/num_ws)

    local res="$(xrandr --nograb --current | awk '/\*/ {print $1}' | tail -n 1)"
    local res=${res% *}
    local sw=${res%x*}
    local sh=${res#*x}
    local sw=${sw%.*}
    local sh=${sh%.*}

    local gap=$(< /tmp/dwm_info/gappx)

    #w=$(( $sw - $gap * 2 ))
    w=$($sw*2)
    #x=$gap
    x=0
    h=$(< /tmp/dwm_info/bar_height)
    
    # if gaps, gap the bar
    [ $gap -gt 0 ] && h=$(( $h + ($h / 4) ))

    # if bar on top, set y value to zero
    #if [ $(< /tmp/dwm_info/top_bar) -eq 0 ] ; then
    #    if [ $gap -gt 0 ] ; then
    #        y=$(echo "$h / 5" | bc -l)
    #    else
    #        y=0
    #    fi
    ## otherwise, it should be screenheight minus the bar height
    #else
    #    if [ $gap -gt 0 ] ; then
    #        y=$(echo "$sh - $h - ($h / 2.5)" | bc -l)
    #    else
    #        y=$(( $sh - $h ))
    #    fi
    #fi
    y=0

    ${HOME}/bin/vol > /tmp/bar/vol

    # fonts
    ft1="San Francisco Text:size=12"
    if [ $gap -eq 0 ] ; then
        ft2="Symbola:size=10"
    else
        ft2="Font Awesome 5 Pro:size=10"
        ft3="IBM Plex Sans:size=10"
        ft4="Font Awesome 5 Brands:size=10"
        ft5="Symbola:size=10"
    fi
}

layout() {
    case $(< /tmp/dwm_info/current_layout) in
        0) echo -n "\\uf44e" ;; # tiled
        1) echo -n "\\ue28e" ;; # floating
        2) echo -n "\\uf10c" ;; # monocle
        3) echo -n "\\uf009" ;; # grid
        4) echo -n "\\uf04c" ;; # center master
        5) echo -n "\\uf247" ;; # center floating master
        6) echo -n "\\uf302" ;; # fibonacci
        7) echo -n "\\uf037" ;; # top master
    esac 2> /dev/null
} 

wksp() {
    if [ $(< /tmp/dwm_info/check) -eq 1 ] ; then
        for i in $(seq $num_ws || jot $num_ws) ; do

            if [ $(< /tmp/dwm_info/ws"$i") -eq 1 ] ; then
                ws=" %{F$color2}$i%{F-} "
            else
                ws=" $i "
            fi

            if [ $(< /tmp/dwm_info/current_ws) -eq $i ] ; then
                ws="%{+u}$ws"
            else
                ws="%{-u}$ws"
            fi

            buffer=$buffer$ws

        done
        echo -n "$buffer" > /tmp/bar/wksp
        echo -n 0 > /tmp/dwm_info/check
    fi 2> /dev/null
}

vol() { 
    vol="$(< /tmp/bar/vol)"
    case ${vol%??} in
        10|[5-9]) echo -n "\\uf028 $vol" ;;
        [1-4]) echo -n "\\uf027 $vol" ;;
        *) echo -n "\\uf026 $vol"
    esac
}

launch_daemons() {
    # battery_daemon
    dash -c '[ $(dash ~/bin/bperc) = NONE ] && exit ; 
    while true ; do
        perc=$(bperc)
        if $(case $(uname) in
                Linux)   test $(cat /sys/class/power_supply/AC/online) -eq 1 ;;
                OpenBSD) test $(apm -a) -eq 1
            esac)
        then
            bat="\\uf492" 
        else
            case ${perc%?} in
                [8-9]) bat="\\uf240" ;;
                [6-7]) bat="\\uf241" ;;
                [4-5]) bat="\\uf242" ;;
                [2-3]) bat="\\uf243" ;;
                *) bat="\\uf244"
            esac
        fi
        echo -n "$bat $perc%" > /tmp/bar/bat

        sleep 15
    done' > /dev/null 2>&1 &

    # time_daemon
    dash -c 'while date "+%I:%M %p" > /tmp/bar/date
        do sleep 59
    done' &
}

get_bat() {
    if [ -f /tmp/bar/bat ] && [ "$(< /tmp/bar/bat)" != NONE ] ; then
        echo "$(< /tmp/bar/bat)"
    fi
}

get_wifi() {
    if [ -n "$(interface)" ] ; then
        echo "[ $(< /tmp/bar/wifi) ]"
    fi
}

init
launch_daemons

while \
    printf " %s%b%b%b%b%b%b%b%b%b%s \\n" \
        "$(wksp)$(< /tmp/bar/wksp)%{-u} " \
        "  %{T4}$(layout)" \
        "  %{c}%{F$color2}%{T3}$(< /tmp/bar/song)%{F-}%{r}%{T2}%{T4} " \
        "  $(get_bat)  " \
        "  %{T4}$(vol)  " \
        " %{F$color2}%{T4} $(< /tmp/bar/date) %{T4}%{T-}%{F-}"
    do sleep 0.5
done 2> /dev/null | \

lemonbar -db \
	 -o 0 \
         -f "$ft1" \
	 -o -2 \
         -f "$ft2" \
         -g ${w}x${h}+${x}+${y} \
         -n bar \
         -u 2 \
         -U $color2 \
         -B $color0 \
         -F $color1 \
         -a 0 > /dev/null 2>&1
